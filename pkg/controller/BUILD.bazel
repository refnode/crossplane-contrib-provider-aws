load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "controller",
    srcs = [
        "aws.go",
        "doc.go",
    ],
    importpath = "github.com/crossplane-contrib/provider-aws/pkg/controller",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/controller/acm",
        "//pkg/controller/acmpca/certificateauthority",
        "//pkg/controller/acmpca/certificateauthoritypermission",
        "//pkg/controller/apigateway/method",
        "//pkg/controller/apigateway/resource",
        "//pkg/controller/apigateway/restapi",
        "//pkg/controller/apigatewayv2/api",
        "//pkg/controller/apigatewayv2/apimapping",
        "//pkg/controller/apigatewayv2/authorizer",
        "//pkg/controller/apigatewayv2/deployment",
        "//pkg/controller/apigatewayv2/domainname",
        "//pkg/controller/apigatewayv2/integration",
        "//pkg/controller/apigatewayv2/integrationresponse",
        "//pkg/controller/apigatewayv2/model",
        "//pkg/controller/apigatewayv2/route",
        "//pkg/controller/apigatewayv2/routeresponse",
        "//pkg/controller/apigatewayv2/stage",
        "//pkg/controller/apigatewayv2/vpclink",
        "//pkg/controller/athena/workgroup",
        "//pkg/controller/cache",
        "//pkg/controller/cache/cachesubnetgroup",
        "//pkg/controller/cache/cluster",
        "//pkg/controller/cloudfront/cachepolicy",
        "//pkg/controller/cloudfront/cloudfrontoriginaccessidentity",
        "//pkg/controller/cloudfront/distribution",
        "//pkg/controller/cloudfront/responseheaderspolicy",
        "//pkg/controller/cloudsearch/domain",
        "//pkg/controller/cloudwatchlogs/loggroup",
        "//pkg/controller/cognitoidentity/identitypool",
        "//pkg/controller/cognitoidentityprovider/group",
        "//pkg/controller/cognitoidentityprovider/groupusermembership",
        "//pkg/controller/cognitoidentityprovider/identityprovider",
        "//pkg/controller/cognitoidentityprovider/resourceserver",
        "//pkg/controller/cognitoidentityprovider/userpool",
        "//pkg/controller/cognitoidentityprovider/userpoolclient",
        "//pkg/controller/cognitoidentityprovider/userpooldomain",
        "//pkg/controller/config",
        "//pkg/controller/database",
        "//pkg/controller/database/dbsubnetgroup",
        "//pkg/controller/dax/cluster",
        "//pkg/controller/dax/parametergroup",
        "//pkg/controller/dax/subnetgroup",
        "//pkg/controller/docdb/dbcluster",
        "//pkg/controller/docdb/dbclusterparametergroup",
        "//pkg/controller/docdb/dbinstance",
        "//pkg/controller/docdb/dbsubnetgroup",
        "//pkg/controller/dynamodb/backup",
        "//pkg/controller/dynamodb/globaltable",
        "//pkg/controller/dynamodb/table",
        "//pkg/controller/ec2/address",
        "//pkg/controller/ec2/instance",
        "//pkg/controller/ec2/internetgateway",
        "//pkg/controller/ec2/launchtemplate",
        "//pkg/controller/ec2/launchtemplateversion",
        "//pkg/controller/ec2/natgateway",
        "//pkg/controller/ec2/route",
        "//pkg/controller/ec2/routetable",
        "//pkg/controller/ec2/securitygroup",
        "//pkg/controller/ec2/securitygrouprule",
        "//pkg/controller/ec2/subnet",
        "//pkg/controller/ec2/transitgateway",
        "//pkg/controller/ec2/transitgatewayroute",
        "//pkg/controller/ec2/transitgatewayroutetable",
        "//pkg/controller/ec2/transitgatewayvpcattachment",
        "//pkg/controller/ec2/volume",
        "//pkg/controller/ec2/vpc",
        "//pkg/controller/ec2/vpccidrblock",
        "//pkg/controller/ec2/vpcendpoint",
        "//pkg/controller/ec2/vpcendpointserviceconfiguration",
        "//pkg/controller/ec2/vpcpeeringconnection",
        "//pkg/controller/ecr/lifecyclepolicy",
        "//pkg/controller/ecr/repository",
        "//pkg/controller/ecr/repositorypolicy",
        "//pkg/controller/ecs/cluster",
        "//pkg/controller/ecs/service",
        "//pkg/controller/ecs/taskdefinition",
        "//pkg/controller/efs/accesspoint",
        "//pkg/controller/efs/filesystem",
        "//pkg/controller/efs/mounttarget",
        "//pkg/controller/eks",
        "//pkg/controller/eks/addon",
        "//pkg/controller/eks/fargateprofile",
        "//pkg/controller/eks/identityproviderconfig",
        "//pkg/controller/eks/nodegroup",
        "//pkg/controller/elasticache/cacheparametergroup",
        "//pkg/controller/elasticloadbalancing/elb",
        "//pkg/controller/elasticloadbalancing/elbattachment",
        "//pkg/controller/elbv2/listener",
        "//pkg/controller/elbv2/loadbalancer",
        "//pkg/controller/elbv2/targetgroup",
        "//pkg/controller/glue/classifier",
        "//pkg/controller/glue/connection",
        "//pkg/controller/glue/crawler",
        "//pkg/controller/glue/database",
        "//pkg/controller/glue/job",
        "//pkg/controller/glue/securityconfiguration",
        "//pkg/controller/iam/accesskey",
        "//pkg/controller/iam/group",
        "//pkg/controller/iam/grouppolicyattachment",
        "//pkg/controller/iam/groupusermembership",
        "//pkg/controller/iam/instanceprofile",
        "//pkg/controller/iam/openidconnectprovider",
        "//pkg/controller/iam/policy",
        "//pkg/controller/iam/role",
        "//pkg/controller/iam/rolepolicyattachment",
        "//pkg/controller/iam/user",
        "//pkg/controller/iam/userpolicyattachment",
        "//pkg/controller/iot/policy",
        "//pkg/controller/iot/thing",
        "//pkg/controller/kafka/cluster",
        "//pkg/controller/kafka/configuration",
        "//pkg/controller/kinesis/stream",
        "//pkg/controller/kms/alias",
        "//pkg/controller/kms/key",
        "//pkg/controller/lambda/function",
        "//pkg/controller/lambda/permission",
        "//pkg/controller/mq/broker",
        "//pkg/controller/mq/user",
        "//pkg/controller/mwaa/environment",
        "//pkg/controller/neptune/dbcluster",
        "//pkg/controller/notification/snssubscription",
        "//pkg/controller/notification/snstopic",
        "//pkg/controller/prometheusservice/alertmanagerdefinition",
        "//pkg/controller/prometheusservice/rulegroupsnamespace",
        "//pkg/controller/prometheusservice/workspace",
        "//pkg/controller/ram/resourceshare",
        "//pkg/controller/rds/dbcluster",
        "//pkg/controller/rds/dbclusterparametergroup",
        "//pkg/controller/rds/dbinstance",
        "//pkg/controller/rds/dbinstanceroleassociation",
        "//pkg/controller/rds/dbparametergroup",
        "//pkg/controller/rds/globalcluster",
        "//pkg/controller/redshift",
        "//pkg/controller/route53/hostedzone",
        "//pkg/controller/route53/resourcerecordset",
        "//pkg/controller/route53resolver/resolverendpoint",
        "//pkg/controller/route53resolver/resolverrule",
        "//pkg/controller/route53resolver/resolverruleassociation",
        "//pkg/controller/s3",
        "//pkg/controller/s3/bucketpolicy",
        "//pkg/controller/secretsmanager/secret",
        "//pkg/controller/servicediscovery/httpnamespace",
        "//pkg/controller/servicediscovery/privatednsnamespace",
        "//pkg/controller/servicediscovery/publicdnsnamespace",
        "//pkg/controller/sfn/activity",
        "//pkg/controller/sfn/statemachine",
        "//pkg/controller/sns/subscription",
        "//pkg/controller/sns/topic",
        "//pkg/controller/sqs/queue",
        "//pkg/controller/transfer/server",
        "//pkg/controller/transfer/user",
        "@com_github_crossplane_crossplane_runtime//pkg/controller",
        "@io_k8s_sigs_controller_runtime//:controller-runtime",
    ],
)
